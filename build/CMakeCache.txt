# This is the CMakeCache file.
# For build in directory: d:/Hybrid/tvm-clib/build
# It was generated by CMake: C:/Program Files/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:UNINITIALIZED=Release

//No help, variable specified on the command line.
CMAKE_CONFIGURATION_TYPES:UNINITIALIZED=Release

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/tvm

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/VC/Tools/MSVC/14.21.27702/bin/Hostx64/x64/link.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=CMAKE_MT-NOTFOUND

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=tvm

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=/DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=/D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Path to COMPILER-RT
COMPILER_RT_PATH:STRING=3rdparty/compiler-rt

//Compile device code in 64 bit mode
CUDA_64_BIT_DEVICE_CODE:BOOL=ON

//Attach the build rule to the CUDA source file.  Enable only when
// the CUDA source file is added to at most one target.
CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE:BOOL=ON

//Generate and parse .cubin files in Device mode.
CUDA_BUILD_CUBIN:BOOL=OFF

//Build in Emulation mode
CUDA_BUILD_EMULATION:BOOL=OFF

//Path to a library.
CUDA_CUBLAS_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cublas.lib

//"cudart" library
CUDA_CUDART_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cudart.lib

//"cuda" library (older versions only).
CUDA_CUDA_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cuda.lib

//Path to a library.
CUDA_CUDNN_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cudnn.lib

//Directory to put all the output files.  If blank it will default
// to the CMAKE_CURRENT_BINARY_DIR
CUDA_GENERATED_OUTPUT_DIR:PATH=

//Generated file extension
CUDA_HOST_COMPILATION_CPP:BOOL=ON

//Host side compiler used by NVCC
CUDA_HOST_COMPILER:FILEPATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)

//Path to a program.
CUDA_NVCC_EXECUTABLE:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/bin/nvcc.exe

//Semi-colon delimit multiple arguments. during all build types.
CUDA_NVCC_FLAGS:STRING=

//Semi-colon delimit multiple arguments. during DEBUG builds.
CUDA_NVCC_FLAGS_DEBUG:STRING=

//Semi-colon delimit multiple arguments. during MINSIZEREL builds.
CUDA_NVCC_FLAGS_MINSIZEREL:STRING=

//Semi-colon delimit multiple arguments. during RELEASE builds.
CUDA_NVCC_FLAGS_RELEASE:STRING=

//Semi-colon delimit multiple arguments. during RELWITHDEBINFO
// builds.
CUDA_NVCC_FLAGS_RELWITHDEBINFO:STRING=

//Path to a library.
CUDA_NVRTC_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nvrtc.lib

//Propagate C/CXX_FLAGS and friends to the host compiler via -Xcompile
CUDA_PROPAGATE_HOST_FLAGS:BOOL=ON

//Path to a file.
CUDA_SDK_ROOT_DIR:PATH=CUDA_SDK_ROOT_DIR-NOTFOUND

//Compile CUDA objects with separable compilation enabled.  Requires
// CUDA 5.0+
CUDA_SEPARABLE_COMPILATION:BOOL=OFF

//Path to a file.
CUDA_TOOLKIT_INCLUDE:PATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/include

//Toolkit location.
CUDA_TOOLKIT_ROOT_DIR:PATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2

//Use the static version of the CUDA runtime library if available
CUDA_USE_STATIC_CUDA_RUNTIME:BOOL=ON

//Print out the commands run while compiling the CUDA source file.
//  With the Makefile generator this defaults to VERBOSE variable
// specified on the command line, but can be forced on with this
// option.
CUDA_VERBOSE_BUILD:BOOL=OFF

//Version of CUDA as computed from nvcc.
CUDA_VERSION:STRING=9.2

//"cublas" library
CUDA_cublas_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cublas.lib

//"cudadevrt" library
CUDA_cudadevrt_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cudadevrt.lib

//static CUDA runtime library
CUDA_cudart_static_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cudart_static.lib

//"cufft" library
CUDA_cufft_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cufft.lib

//"cupti" library
CUDA_cupti_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/extras/CUPTI/libx64/cupti.lib

//"curand" library
CUDA_curand_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/curand.lib

//"cusolver" library
CUDA_cusolver_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cusolver.lib

//"cusparse" library
CUDA_cusparse_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cusparse.lib

//"nppc" library
CUDA_nppc_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nppc.lib

//"nppial" library
CUDA_nppial_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nppial.lib

//"nppicc" library
CUDA_nppicc_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nppicc.lib

//"nppicom" library
CUDA_nppicom_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nppicom.lib

//"nppidei" library
CUDA_nppidei_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nppidei.lib

//"nppif" library
CUDA_nppif_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nppif.lib

//"nppig" library
CUDA_nppig_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nppig.lib

//"nppim" library
CUDA_nppim_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nppim.lib

//"nppist" library
CUDA_nppist_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nppist.lib

//"nppisu" library
CUDA_nppisu_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nppisu.lib

//"nppitc" library
CUDA_nppitc_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nppitc.lib

//"npps" library
CUDA_npps_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/npps.lib

//"nvcuvenc" library
CUDA_nvcuvenc_LIBRARY:FILEPATH=CUDA_nvcuvenc_LIBRARY-NOTFOUND

//"nvcuvid" library
CUDA_nvcuvid_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nvcuvid.lib

//Path to DLPACK
DLPACK_PATH:STRING=3rdparty/dlpack/include

//Path to DMLC
DMLC_PATH:STRING=3rdparty/dmlc-core/include

//Path to a library.
GTEST_LIB:FILEPATH=GTEST_LIB-NOTFOUND

//Compile with -fvisibility=hidden.
HIDE_PRIVATE_SYMBOLS:STRING=OFF

//Install compiler infrastructure
INSTALL_DEV:STRING=OFF

//No help, variable specified on the command line.
LLVM_DIR:UNINITIALIZED=D:/Hybrid/LLVM/build/lib/cmake/llvm

//OpenGL library for win32
OPENGL_gl_LIBRARY:STRING=opengl32

//GLU library for win32
OPENGL_glu_LIBRARY:STRING=glu32

//Path to a file.
OpenCL_INCLUDE_DIR:PATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/include

//Path to a library.
OpenCL_LIBRARY:FILEPATH=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/OpenCL.lib

//Path to a program.
PYTHON:FILEPATH=C:/Users/Aster/AppData/Roaming/Mathematica/ApplicationData/SystemInstall/Python/python.exe

//Path to RANG
RANG_PATH:STRING=3rdparty/rang/include

//The path to rocm
ROCM_PATH:STRING=/opt/rocm

//Build with ANTLR for Relay parsing
USE_ANTLR:STRING=OFF

//The blas library to be linked
USE_BLAS:STRING=none

//Build with cuBLAS
USE_CUBLAS:STRING=OFF

//Build with CUDA
USE_CUDA:STRING=ON

//Build with cuDNN
USE_CUDNN:STRING=OFF

//Build with tiny graph runtime
USE_GRAPH_RUNTIME:STRING=ON

//Build with tiny graph runtime debug mode
USE_GRAPH_RUNTIME_DEBUG:STRING=OFF

//Build with LLVM, can be set to specific llvm-config path
USE_LLVM:STRING=ON

//Build with Metal
USE_METAL:STRING=OFF

//Build with ROCM:MIOpen
USE_MIOPEN:STRING=OFF

//MKL root path when use MKL blas
USE_MKL_PATH:STRING=none

//Build with MT
USE_MSVC_MT:STRING=OFF

//Build with nnpack support
USE_NNPACK:STRING=OFF

//Build with OpenCL
USE_OPENCL:STRING=OFF

//Build with OpenGL
USE_OPENGL:STRING=OFF

//Build with random support
USE_RANDOM:STRING=OFF

//Building Relay in debug mode...
USE_RELAY_DEBUG:STRING=OFF

//Build with ROCM:RoCBLAS
USE_ROCBLAS:STRING=OFF

//Build with ROCM
USE_ROCM:STRING=OFF

//Build with RPC
USE_RPC:STRING=ON

//Build with RTTI
USE_RTTI:STRING=ON

//Build with SGX
USE_SGX:STRING=OFF

//Build with sort support
USE_SORT:STRING=OFF

//Include stackvm into the runtime
USE_STACKVM_RUNTIME:STRING=OFF

//Build with Vulkan
USE_VULKAN:STRING=OFF

//Dependencies for the target
nnvm_compiler_LIB_DEPENDS:STATIC=general;tvm;

//Value Computed by CMake
tvm_BINARY_DIR:STATIC=D:/Hybrid/tvm-clib/build

//Dependencies for the target
tvm_LIB_DEPENDS:STATIC=general;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nvrtc.lib;general;LLVMDemangle;general;LLVMSupport;general;LLVMTableGen;general;LLVMCore;general;LLVMFuzzMutate;general;LLVMIRReader;general;LLVMCodeGen;general;LLVMSelectionDAG;general;LLVMAsmPrinter;general;LLVMMIRParser;general;LLVMGlobalISel;general;LLVMBinaryFormat;general;LLVMBitReader;general;LLVMBitWriter;general;LLVMTransformUtils;general;LLVMInstrumentation;general;LLVMAggressiveInstCombine;general;LLVMInstCombine;general;LLVMScalarOpts;general;LLVMipo;general;LLVMVectorize;general;LLVMObjCARCOpts;general;LLVMCoroutines;general;LLVMLinker;general;LLVMAnalysis;general;LLVMLTO;general;LLVMMC;general;LLVMMCParser;general;LLVMMCDisassembler;general;LLVMObject;general;LLVMObjectYAML;general;LLVMOption;general;LLVMDebugInfoDWARF;general;LLVMDebugInfoMSF;general;LLVMDebugInfoCodeView;general;LLVMDebugInfoPDB;general;LLVMSymbolize;general;LLVMExecutionEngine;general;LLVMInterpreter;general;LLVMMCJIT;general;LLVMOrcJIT;general;LLVMRuntimeDyld;general;LLVMTarget;general;LLVMAArch64CodeGen;general;LLVMAArch64AsmParser;general;LLVMAArch64Disassembler;general;LLVMAArch64AsmPrinter;general;LLVMAArch64Desc;general;LLVMAArch64Info;general;LLVMAArch64Utils;general;LLVMAMDGPUCodeGen;general;LLVMAMDGPUAsmParser;general;LLVMAMDGPUDisassembler;general;LLVMAMDGPUAsmPrinter;general;LLVMAMDGPUDesc;general;LLVMAMDGPUInfo;general;LLVMAMDGPUUtils;general;LLVMARMCodeGen;general;LLVMARMAsmParser;general;LLVMARMDisassembler;general;LLVMARMAsmPrinter;general;LLVMARMDesc;general;LLVMARMInfo;general;LLVMARMUtils;general;LLVMBPFCodeGen;general;LLVMBPFAsmParser;general;LLVMBPFDisassembler;general;LLVMBPFAsmPrinter;general;LLVMBPFDesc;general;LLVMBPFInfo;general;LLVMHexagonCodeGen;general;LLVMHexagonAsmParser;general;LLVMHexagonDisassembler;general;LLVMHexagonDesc;general;LLVMHexagonInfo;general;LLVMLanaiCodeGen;general;LLVMLanaiAsmParser;general;LLVMLanaiDisassembler;general;LLVMLanaiAsmPrinter;general;LLVMLanaiDesc;general;LLVMLanaiInfo;general;LLVMMipsCodeGen;general;LLVMMipsAsmParser;general;LLVMMipsDisassembler;general;LLVMMipsAsmPrinter;general;LLVMMipsDesc;general;LLVMMipsInfo;general;LLVMMSP430CodeGen;general;LLVMMSP430AsmPrinter;general;LLVMMSP430Desc;general;LLVMMSP430Info;general;LLVMNVPTXCodeGen;general;LLVMNVPTXAsmPrinter;general;LLVMNVPTXDesc;general;LLVMNVPTXInfo;general;LLVMPowerPCCodeGen;general;LLVMPowerPCAsmParser;general;LLVMPowerPCDisassembler;general;LLVMPowerPCAsmPrinter;general;LLVMPowerPCDesc;general;LLVMPowerPCInfo;general;LLVMSparcCodeGen;general;LLVMSparcAsmParser;general;LLVMSparcDisassembler;general;LLVMSparcAsmPrinter;general;LLVMSparcDesc;general;LLVMSparcInfo;general;LLVMSystemZCodeGen;general;LLVMSystemZAsmParser;general;LLVMSystemZDisassembler;general;LLVMSystemZAsmPrinter;general;LLVMSystemZDesc;general;LLVMSystemZInfo;general;LLVMX86CodeGen;general;LLVMX86AsmParser;general;LLVMX86Disassembler;general;LLVMX86AsmPrinter;general;LLVMX86Desc;general;LLVMX86Info;general;LLVMX86Utils;general;LLVMXCoreCodeGen;general;LLVMXCoreDisassembler;general;LLVMXCoreAsmPrinter;general;LLVMXCoreDesc;general;LLVMXCoreInfo;general;LLVMAsmParser;general;LLVMLineEditor;general;LLVMProfileData;general;LLVMCoverage;general;LLVMPasses;general;LLVMDlltoolDriver;general;LLVMLibDriver;general;LLVMXRay;general;LLVMWindowsManifest;general;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cudart.lib;general;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cuda.lib;general;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nvrtc.lib;

//Value Computed by CMake
tvm_SOURCE_DIR:STATIC=D:/Hybrid/tvm-clib

//Dependencies for the target
tvm_runtime_LIB_DEPENDS:STATIC=general;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cudart.lib;general;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cuda.lib;general;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nvrtc.lib;

//Dependencies for the target
tvm_topi_LIB_DEPENDS:STATIC=general;tvm;general;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nvrtc.lib;general;LLVMDemangle;general;LLVMSupport;general;LLVMTableGen;general;LLVMCore;general;LLVMFuzzMutate;general;LLVMIRReader;general;LLVMCodeGen;general;LLVMSelectionDAG;general;LLVMAsmPrinter;general;LLVMMIRParser;general;LLVMGlobalISel;general;LLVMBinaryFormat;general;LLVMBitReader;general;LLVMBitWriter;general;LLVMTransformUtils;general;LLVMInstrumentation;general;LLVMAggressiveInstCombine;general;LLVMInstCombine;general;LLVMScalarOpts;general;LLVMipo;general;LLVMVectorize;general;LLVMObjCARCOpts;general;LLVMCoroutines;general;LLVMLinker;general;LLVMAnalysis;general;LLVMLTO;general;LLVMMC;general;LLVMMCParser;general;LLVMMCDisassembler;general;LLVMObject;general;LLVMObjectYAML;general;LLVMOption;general;LLVMDebugInfoDWARF;general;LLVMDebugInfoMSF;general;LLVMDebugInfoCodeView;general;LLVMDebugInfoPDB;general;LLVMSymbolize;general;LLVMExecutionEngine;general;LLVMInterpreter;general;LLVMMCJIT;general;LLVMOrcJIT;general;LLVMRuntimeDyld;general;LLVMTarget;general;LLVMAArch64CodeGen;general;LLVMAArch64AsmParser;general;LLVMAArch64Disassembler;general;LLVMAArch64AsmPrinter;general;LLVMAArch64Desc;general;LLVMAArch64Info;general;LLVMAArch64Utils;general;LLVMAMDGPUCodeGen;general;LLVMAMDGPUAsmParser;general;LLVMAMDGPUDisassembler;general;LLVMAMDGPUAsmPrinter;general;LLVMAMDGPUDesc;general;LLVMAMDGPUInfo;general;LLVMAMDGPUUtils;general;LLVMARMCodeGen;general;LLVMARMAsmParser;general;LLVMARMDisassembler;general;LLVMARMAsmPrinter;general;LLVMARMDesc;general;LLVMARMInfo;general;LLVMARMUtils;general;LLVMBPFCodeGen;general;LLVMBPFAsmParser;general;LLVMBPFDisassembler;general;LLVMBPFAsmPrinter;general;LLVMBPFDesc;general;LLVMBPFInfo;general;LLVMHexagonCodeGen;general;LLVMHexagonAsmParser;general;LLVMHexagonDisassembler;general;LLVMHexagonDesc;general;LLVMHexagonInfo;general;LLVMLanaiCodeGen;general;LLVMLanaiAsmParser;general;LLVMLanaiDisassembler;general;LLVMLanaiAsmPrinter;general;LLVMLanaiDesc;general;LLVMLanaiInfo;general;LLVMMipsCodeGen;general;LLVMMipsAsmParser;general;LLVMMipsDisassembler;general;LLVMMipsAsmPrinter;general;LLVMMipsDesc;general;LLVMMipsInfo;general;LLVMMSP430CodeGen;general;LLVMMSP430AsmPrinter;general;LLVMMSP430Desc;general;LLVMMSP430Info;general;LLVMNVPTXCodeGen;general;LLVMNVPTXAsmPrinter;general;LLVMNVPTXDesc;general;LLVMNVPTXInfo;general;LLVMPowerPCCodeGen;general;LLVMPowerPCAsmParser;general;LLVMPowerPCDisassembler;general;LLVMPowerPCAsmPrinter;general;LLVMPowerPCDesc;general;LLVMPowerPCInfo;general;LLVMSparcCodeGen;general;LLVMSparcAsmParser;general;LLVMSparcDisassembler;general;LLVMSparcAsmPrinter;general;LLVMSparcDesc;general;LLVMSparcInfo;general;LLVMSystemZCodeGen;general;LLVMSystemZAsmParser;general;LLVMSystemZDisassembler;general;LLVMSystemZAsmPrinter;general;LLVMSystemZDesc;general;LLVMSystemZInfo;general;LLVMX86CodeGen;general;LLVMX86AsmParser;general;LLVMX86Disassembler;general;LLVMX86AsmPrinter;general;LLVMX86Desc;general;LLVMX86Info;general;LLVMX86Utils;general;LLVMXCoreCodeGen;general;LLVMXCoreDisassembler;general;LLVMXCoreAsmPrinter;general;LLVMXCoreDesc;general;LLVMXCoreInfo;general;LLVMAsmParser;general;LLVMLineEditor;general;LLVMProfileData;general;LLVMCoverage;general;LLVMPasses;general;LLVMDlltoolDriver;general;LLVMLibDriver;general;LLVMXRay;general;LLVMWindowsManifest;general;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cudart.lib;general;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/cuda.lib;general;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2/lib/x64/nvrtc.lib;


########################
# INTERNAL cache entries
########################

//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=d:/Hybrid/tvm-clib/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=14
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 16 2019
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=D:/Hybrid/tvm-clib
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/CMake/share/cmake-3.14
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_64_BIT_DEVICE_CODE
CUDA_64_BIT_DEVICE_CODE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE
CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_BUILD_CUBIN
CUDA_BUILD_CUBIN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_BUILD_EMULATION
CUDA_BUILD_EMULATION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_CUDART_LIBRARY
CUDA_CUDART_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_CUDA_LIBRARY
CUDA_CUDA_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_GENERATED_OUTPUT_DIR
CUDA_GENERATED_OUTPUT_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_HOST_COMPILATION_CPP
CUDA_HOST_COMPILATION_CPP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_EXECUTABLE
CUDA_NVCC_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_FLAGS
CUDA_NVCC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_FLAGS_DEBUG
CUDA_NVCC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_FLAGS_MINSIZEREL
CUDA_NVCC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_FLAGS_RELEASE
CUDA_NVCC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_FLAGS_RELWITHDEBINFO
CUDA_NVCC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_PROPAGATE_HOST_FLAGS
CUDA_PROPAGATE_HOST_FLAGS-ADVANCED:INTERNAL=1
//This is the value of the last time CUDA_SDK_ROOT_DIR was set
// successfully.
CUDA_SDK_ROOT_DIR_INTERNAL:INTERNAL=CUDA_SDK_ROOT_DIR-NOTFOUND
//ADVANCED property for variable: CUDA_SEPARABLE_COMPILATION
CUDA_SEPARABLE_COMPILATION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_TOOLKIT_INCLUDE
CUDA_TOOLKIT_INCLUDE-ADVANCED:INTERNAL=1
//This is the value of the last time CUDA_TOOLKIT_ROOT_DIR was
// set successfully.
CUDA_TOOLKIT_ROOT_DIR_INTERNAL:INTERNAL=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2
//This is the value of the last time CUDA_TOOLKIT_TARGET_DIR was
// set successfully.
CUDA_TOOLKIT_TARGET_DIR_INTERNAL:INTERNAL=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2
//ADVANCED property for variable: CUDA_VERBOSE_BUILD
CUDA_VERBOSE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_VERSION
CUDA_VERSION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_cublas_LIBRARY
CUDA_cublas_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_cudadevrt_LIBRARY
CUDA_cudadevrt_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_cudart_static_LIBRARY
CUDA_cudart_static_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_cufft_LIBRARY
CUDA_cufft_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_cupti_LIBRARY
CUDA_cupti_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_curand_LIBRARY
CUDA_curand_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_cusolver_LIBRARY
CUDA_cusolver_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_cusparse_LIBRARY
CUDA_cusparse_LIBRARY-ADVANCED:INTERNAL=1
//Location of make2cmake.cmake
CUDA_make2cmake:INTERNAL=C:/Program Files/CMake/share/cmake-3.14/Modules/FindCUDA/make2cmake.cmake
//ADVANCED property for variable: CUDA_nppc_LIBRARY
CUDA_nppc_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nppial_LIBRARY
CUDA_nppial_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nppicc_LIBRARY
CUDA_nppicc_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nppicom_LIBRARY
CUDA_nppicom_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nppidei_LIBRARY
CUDA_nppidei_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nppif_LIBRARY
CUDA_nppif_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nppig_LIBRARY
CUDA_nppig_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nppim_LIBRARY
CUDA_nppim_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nppist_LIBRARY
CUDA_nppist_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nppisu_LIBRARY
CUDA_nppisu_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nppitc_LIBRARY
CUDA_nppitc_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_npps_LIBRARY
CUDA_npps_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nvcuvenc_LIBRARY
CUDA_nvcuvenc_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_nvcuvid_LIBRARY
CUDA_nvcuvid_LIBRARY-ADVANCED:INTERNAL=1
//Location of parse_cubin.cmake
CUDA_parse_cubin:INTERNAL=C:/Program Files/CMake/share/cmake-3.14/Modules/FindCUDA/parse_cubin.cmake
//Location of run_nvcc.cmake
CUDA_run_nvcc:INTERNAL=C:/Program Files/CMake/share/cmake-3.14/Modules/FindCUDA/run_nvcc.cmake
//Have symbol CL_VERSION_1_2
OPENCL_VERSION_1_2:INTERNAL=1
//Have symbol CL_VERSION_2_0
OPENCL_VERSION_2_0:INTERNAL=
//Have symbol CL_VERSION_2_1
OPENCL_VERSION_2_1:INTERNAL=
//Have symbol CL_VERSION_2_2
OPENCL_VERSION_2_2:INTERNAL=
//ADVANCED property for variable: OPENGL_gl_LIBRARY
OPENGL_gl_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENGL_glu_LIBRARY
OPENGL_glu_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OpenCL_INCLUDE_DIR
OpenCL_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OpenCL_LIBRARY
OpenCL_LIBRARY-ADVANCED:INTERNAL=1

